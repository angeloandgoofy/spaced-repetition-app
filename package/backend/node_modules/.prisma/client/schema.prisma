datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String?  // Made optional since demo users don't have passwords
  name      String?
  createdAt DateTime @default(now()) // Added missing field
  decks     Deck[]
  cards     Card[]
  reviews   Review[]
}

model Deck {
  id          String   @id @default(cuid())
  title       String
  description String?  // Added missing field
  createdAt   DateTime @default(now()) // Added missing field
  updatedAt   DateTime @updatedAt // Added missing field
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  cards       Card[]
}

model Card {
  id          String   @id @default(cuid())
  front       String
  back        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  easiness    Float    @default(2.5)
  repetitions Int      @default(0)
  interval    Int      @default(1)
  dueDate     DateTime @default(now())
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  deckId      String
  deck        Deck     @relation(fields: [deckId], references: [id], onDelete: Cascade)
  reviews     Review[]
}

model Review {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  quality   Int
  cardId    String
  card      Card     @relation(fields: [cardId], references: [id], onDelete: Cascade)
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}